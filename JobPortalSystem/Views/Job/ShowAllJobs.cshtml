@model List<Job>

@{
    ViewData["Title"] = "Show All Jobs";
    Layout = "_ProfileLayout";
    int counter = 1;
}

<h1 class="text-center text-primary my-4">Available Jobs</h1>

<p>User Name: @User.Identity.Name</p>
<p>Is employer: @(User.IsInRole("employer"))</p>

<div class="container-fluid my-3">
    <div class="d-flex justify-content-end mb-3">
        <a asp-action="AddJob" asp-controller="Job" class="btn btn-success">
            + Add New Job
        </a>
    </div>

    <div class="table-responsive shadow-sm rounded">
        <table id="jobsTable" class="table table-striped table-bordered align-middle" style="width:100%">
            <thead class="table-light">
                <tr>
                    <th>No</th>
                    <th>ID</th>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Location</th>
                    <th>Salary</th>
                    <th>Experience</th>
                    <th>Requirements</th>
                    <th>Expiry Date</th>
                    <th>Category</th>
                    @if(User.IsInRole("admin"))
                    {
                        <th>Posted By</th>
                    }
                    @* <th>Posted By</th> *@
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var job in Model)
                {
                    <tr>
                        <td>@counter</td>
                        <td>@job.Id</td>
                        <td>@job.Title</td>
                        <td>@job.Description</td>
                        <td>@job.Location</td>
                        <td>@job.Salary.ToString("C0")</td>
                        <td>@job.Experience</td>
                        <td>
                            @{
                                var reqs = System.Text.RegularExpressions.Regex
                                .Split(job.Requirements ?? "", @"\s*and\s*|,|\s+")
                                .Where(s => !string.IsNullOrWhiteSpace(s))
                                .Select(s => s.Trim())
                                .ToList();
                            }
                            @if (reqs.Count > 0)
                            {
                                <ul class="list-unstyled mb-0">
                                    @foreach (var r in reqs)
                                    {
                                        <li><i class="fa-solid fa-circle-check text-success me-1"></i>@r</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <span class="text-muted">No requirements</span>
                            }
                        </td>
                        <td>@job.ExpiryDate.ToString("yyyy-MM-dd")</td>
                        <td>@job.Category?.Name</td>
                        @if (User.IsInRole("admin"))
                        {
                            <td>@job.PostedUser?.CompanyName</td>
                        }
                        @* <td>@job.PostedUser.CompanyName</td> *@
                        <td>
                            <a class="btn btn-warning btn-sm text-white"
                               asp-action="Update" asp-controller="Job" asp-route-id="@job.Id">
                                Edit
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("Delete", "Job", new { id = job.Id })"
                               class="btn btn-danger btn-sm delete-job">
                                Delete
                            </a>
                        </td>
                    </tr>
                    counter++;
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {

            // ====== DataTable Initialization ======
            $('#jobsTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthChange": true,
                "pageLength": 10,
                "language": {
                    "search": "Search:",
                    "lengthMenu": "Show _MENU_ entries",
                    "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "paginate": {
                        "previous": "Previous",
                        "next": "Next"
                    }
                },
                "columnDefs": [
                    { "orderable": false, "targets": [10, 11] } // disable sorting for Edit/Delete columns
                ]
            });

            // ===== Toastr Notifications =====
            @if (TempData["SuccessMessage"] != null)
            {
                    <text>toastr.success('@TempData["SuccessMessage"]');</text>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                    <text>toastr.error('@TempData["ErrorMessage"]');</text>
            }

            // ===== Confirm Delete =====
            $('.delete-job').on('click', function (e) {
                e.preventDefault();
                var url = $(this).attr('href');
                if (confirm('Are you sure you want to delete this job?')) {
                    window.location.href = url;
                }
            });
        });
    </script>
}
